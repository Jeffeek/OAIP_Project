Виртуальные методы в С++

Определение
Виртуальный метод (виртуальная функция) — это метод класса, который может быть переопределён в классах-наследниках так, что конкретная реализация метода для вызова будет определяться во время исполнения.

Представим себе:

class Base
{
public:
 void f();
};
class Derived : public Base
{
public:
 void f();
};
и далее:

Base* pb = new Derived;
pb->f();
то в данном случае решение о том, какую функцию звать — Base::f или Derived::f — принимается на основе известного компилятору типа указателя, т.е. Base::f.

Однако хотелось бы иметь возможность объявить наследника так, чтобы у объектов типа-наследника всегда звалась новая, определенная в типе-наследнике функция, независимо от того, какая функция определена в базовом классе.

Такое требует специальной поддержки во время выполнения, ибо компилятор, увидев Base*, не знает, есть ли это объект, созданный как Base, или же Base-часть в объекте класса Derived.

Эта возможность есть, она выглядит так:

class Base
{
public:
 virtual void f();
};
class Derived : public Base
{
public:
 void f();
};
В этом случае pb->f() будет исполнять совсем иной код. Обычно этот код находит указатель на таблицу виртуальных методов в начале объекта и выбирает функцию из этой таблицы. Указатель же на таблицу зависит от того, как создавался объект Base — как подобъект в Derived или же непосредственно как Base. Заполнение этого указателя обычно делается специальным кодом, автоматически сгенерированным внутри конструктора.

Достаточно объявить метод как virtual на вершине дерева наследования, где он встречается впервые. Писать virtual в потомках уже не обязательно, хотя и можно (ничего не делает, все равно virtual).

Итак, благодаря виртуальным методам программисту необязательно знать точный тип объекта для работы с ним через виртуальные методы: достаточно лишь знать, что объект принадлежит классу или наследнику класса, в котором метод объявлен.

Виртуальные методы — один из важнейших приёмов реализации полиморфизма. Они позволяют создавать общий код, который может работать как с объектами базового класса, так и с объектами любого его класса-наследника.

Чистые виртуальные методы
Возможно после объявления виртуального метода не реализовывать его, а написать " = 0":

class Base
{
public:
    virtual void f() = 0;
};
class Derived : public Base
{
public:
    void f();
};
Это так называемая чисто виртуальный (pure virtual) метод. Объект класса, в котором есть такое, не может быть создан напрямую, только как подобъект в классе-наследнике. Такой класс нельзя использовать в объявлениях объектов, но можно в объявлениях указателей на них и в списках базовых классов других классов.

Класс, который содержит хотя бы один чисто виртуальный метод называется абстрактным. Нельзя создавать объекты абстрактного класса.